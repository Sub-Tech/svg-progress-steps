{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/ProgressSteps.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_ProgressSteps","window","stepsProgress","ProgressSteps","getLineLength","lineElem","x1","baseVal","x2","y1","y2","Math","sqrt","getCircleLengthPoly","SVGCircleElement","getTotalLength","radius","this","parentNode","clientHeight","PI","nameSpace","libName","stepsInit","target","steps","currentStep","svgNode","setAttrs","node","props","length","setAttribute","renderSvg","document","createElementNS","circleRadius","strokeWidth","svgHeightRatio","appendChild","renderBar","start","toString","end","lineBg","lineFg","lineHeightGauge","colorBg","colorFg","renderSvgCircles","_this","map","cx","circleNodeFgBg","backgroundColor","circleNode","circleNodeFg","renderTextNodes","_this2","testLine","querySelector","testLength","textXoffset","textNode","textFill","fontSize","constructor","Array","allTextSize","gapTop","y","tspan","spanContent","createTextNode","text","animate","callback","_this3","stepSpeed","animationSpeed","lineSpeed","completedLine","style","transition","lineLength","completeLineStroke","strokeDasharray","completeStepNode","querySelectorAll","console","error","transitionDelay","visibility","completeStroke","currentStepCompleted","completeFill","fill","completeTextFill","completeStepTextNode","activeTextFill","setNumber","val","def","isNaN","setString","setConfig","conf","textSizeRatio","textYPosition","updateProgress","fn","updateStepsText","allTextNodes","remove","init","progress"],"mappings":"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","file":"svg-progress-steps.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import ProgressSteps from './ProgressSteps'\n\nwindow.stepsProgress = ProgressSteps\n\n\n","const getLineLength = lineElem => {\n  let x1 = lineElem.x1.baseVal.value\n  let x2 = lineElem.x2.baseVal.value\n  let y1 = lineElem.y1.baseVal.value\n  let y2 = lineElem.y2.baseVal.value\n  return Math.sqrt( (x2-=x1)*x2 + (y2-=y1)*y2 );\n}\nconst getCircleLengthPoly = () => {\n  if (! window.SVGCircleElement || ! window.SVGCircleElement.prototype.getTotalLength) {\n    window.SVGCircleElement.prototype.getTotalLength = function() {\n      let radius = this.parentNode.clientHeight  // client height should be the circle radius\n      return 2 * Math.PI * radius;        // Get the circumference from 2πr\n    }\n  }\n}\nconst nameSpace = `http://www.w3.org/2000/svg`\nconst libName = 'svg-progress-steps'\n\nconst stepsInit = {\n  target: null,\n  steps: [],\n  currentStep: 0,\n  svgNode: null,\n  setAttrs (node, props) {\n    for (let i = 0; i < props.length; i++) {\n      node.setAttribute(props[i][0], props[i][1])\n    }\n  },\n  renderSvg () {\n    this.svgNode = document.createElementNS(nameSpace, \"svg\")\n    this.setAttrs(this.svgNode, [\n      ['viewBox', `0 0 ${this.circleRadius * 2 * this.steps.length * 2} ${((this.circleRadius * 2) + this.strokeWidth) * this.svgHeightRatio}`],\n      ['version', 'http://www.w3.org/1999/xlink'],\n      ['xmlns:xlink', 'http://www.w3.org/1999/xlink'],\n      ['height', `${this.circleRadius}`],\n      ['width', '100%']\n    ])\n    this.target.appendChild(this.svgNode)\n  },\n  renderBar () {\n    // const start = this.\n    const start = ((( 0.5 ) / this.steps.length) * 100).toString() + '%'\n    const end = ((( (this.steps.length - 1) + 0.5 ) / this.steps.length) * 100).toString() + '%'\n\n    const lineBg = document.createElementNS(nameSpace, 'line')\n    const lineFg = document.createElementNS(nameSpace, 'line')\n    const lineHeightGauge = document.createElementNS(nameSpace, 'line')\n    this.setAttrs(lineBg, [\n      ['x1', start],\n      ['x2', end],\n      ['y1', '50%'],\n      ['y2', '50%'],\n      ['class', 'line-bg'],\n      ['stroke', this.colorBg],\n      ['stroke-width', `${this.strokeWidth}`]\n    ])\n    this.setAttrs(lineFg, [\n      ['x1', start],\n      ['x2', end],\n      ['y1', '50%'],\n      ['y2', '50%'],\n      ['class', 'line-complete'],\n      ['stroke', this.colorFg],\n      ['stroke-width', `${this.strokeWidth}`],\n      ['stroke-dasharray', '0 10000'],\n      ['stroke-dashoffset', '0']\n    ])\n    this.setAttrs(lineHeightGauge, [\n      ['x1', '0%'],\n      ['x2', '0%'],\n      ['y1', '0%'],\n      ['y2', '100%'],\n      ['class', 'line-test'],\n      ['stroke', this.colorFg],\n      ['stroke-width', `${this.strokeWidth}`],\n      ['stroke-dasharray', '0 10000'],\n      ['stroke-dashoffset', '0']\n    ])\n    this.svgNode.appendChild(lineHeightGauge)\n    this.svgNode.appendChild(lineBg)\n    this.svgNode.appendChild(lineFg)\n  },\n  renderSvgCircles () {\n    this.steps.map((d, i) => {\n      const cx = ((( i + 0.5 ) / this.steps.length) * 100).toString() + '%'\n\n      const circleNodeFgBg = document.createElementNS(nameSpace, 'circle')\n      this.setAttrs(circleNodeFgBg, [\n        ['cx', cx],\n        ['cy', '50%'],\n        ['r', this.circleRadius.toString()],\n        ['stroke-width', `${this.strokeWidth}`],\n        ['fill', this.backgroundColor],\n        ['class', 'step-foreground-fill']\n      ])\n      this.svgNode.appendChild(circleNodeFgBg)\n\n      const circleNode = document.createElementNS(nameSpace, 'circle')\n      this.setAttrs(circleNode, [\n        ['cx', cx],\n        ['cy', '50%'],\n        ['r', this.circleRadius.toString()],\n        ['stroke', this.colorBg],\n        ['stroke-width', `${this.strokeWidth}`],\n        ['fill', 'none'],\n        ['class', 'step-background']\n      ])\n      this.svgNode.appendChild(circleNode)\n\n      const circleNodeFg = document.createElementNS(nameSpace, 'circle')\n      this.setAttrs(circleNodeFg, [\n        ['cx', cx],\n        ['cy', '50%'],\n        ['r', this.circleRadius.toString()],\n        ['stroke', this.colorFg],\n        ['stroke-width', `${this.strokeWidth}`],\n        ['fill', 'none'],\n        ['class', 'step-foreground'],\n        ['stroke-dasharray', '0 10000'],\n        ['stroke-dashoffset', '0']\n      ])\n      this.svgNode.appendChild(circleNodeFg)\n    })\n  },\n  renderTextNodes () {\n    // line test to get height of svg after viewbox\n    const testLine = this.target.querySelector('.line-test')\n    const testLength = getLineLength(testLine);\n\n    this.steps.map((d, i) => {\n      const cx = (((( i + 0.5 ) / this.steps.length) + this.textXoffset) * 100).toString() + '%'\n      if (d) {\n        const textNode = document.createElementNS(nameSpace,'text')\n        this.setAttrs(textNode, [\n          ['x',cx],\n          ['y', (testLength / 2).toString()],\n          ['alignment-baseline', 'central'],\n          ['text-anchor','middle'],\n          ['class','step-text'],\n          ['fill', this.textFill],\n          ['font-size',`${this.fontSize}`]\n        ])\n\n        if (d.constructor === Array) {\n          const allTextSize = d.length * this.fontSize\n          const gapTop = (testLength - allTextSize + this.fontSize) / 2\n\n          d.map((t, i) => {\n            const y = gapTop + (i * this.fontSize)\n            const tspan = document.createElementNS(nameSpace, 'tspan')\n            tspan.setAttribute('x',cx)\n            tspan.setAttribute(\"alignment-baseline\", \"central\")\n            tspan.setAttribute('y', y)\n            const spanContent = document.createTextNode(t)\n            tspan.appendChild(spanContent)\n            textNode.appendChild(tspan)\n          })\n        } else {\n          const text = document.createTextNode(d)\n          textNode.appendChild(text)\n        }\n        this.svgNode.appendChild(textNode)\n      }\n    })\n  },\n  animate (callback) {\n    const stepSpeed =  this.animationSpeed / this.steps.length\n    const lineSpeed = this.animationSpeed - stepSpeed\n\n    // line animation\n    const completedLine = this.target.querySelector('.line-complete')\n    completedLine.style.transition = `stroke-dasharray ${lineSpeed}ms ease-in-out`\n    const lineLength = getLineLength(completedLine);\n    const completeLineStroke = lineLength * ((this.currentStep + (this.currentStep/this.steps.length)) / this.steps.length)\n    completedLine.style.strokeDasharray = completeLineStroke  + \", \" + lineLength\n\n    // first remove any future current steps\n    for (let i = this.steps.length - 1; i > this.currentStep; i--) {\n      const completeStepNode = this.target.querySelectorAll('.step-foreground')[i]\n      if (! completeStepNode) {\n        console.error(`${libName}: missing step foreground`)\n        continue\n      }\n      completeStepNode.style.transition = ''\n      completeStepNode.style.strokeDasharray = '0, 1000'\n    }\n\n    for (let i = 0; i <= this.currentStep; i++) {\n      const completeStepNode = this.target.querySelectorAll('.step-foreground')[i]\n      if (! completeStepNode) {\n        console.error(`${libName}: missing step foreground`)\n        continue\n      }\n      const length = completeStepNode.getTotalLength();\n      completeStepNode.style.transition = `stroke-dasharray ${stepSpeed}ms ease-in-out`\n      completeStepNode.style.transitionDelay = `${stepSpeed * i}ms`\n      if (i === this.currentStep) {\n        completeStepNode.style.visibility = 'hidden'\n        const completeStroke = length * this.currentStepCompleted\n        completeStepNode.style.strokeDasharray = completeStroke + \", \" + length\n        completeStepNode.style.visibility = 'visible';\n      } else {\n        completeStepNode.style.strokeDasharray = length + \", \" + length\n      }\n    }\n\n    this.steps.map((s, i) => {\n      const completeStepNode = this.target.querySelectorAll('.step-foreground-fill')[i]\n      if (this.completeFill) {\n        completeStepNode.style.transitionDelay = `0ms`\n        if (i < this.currentStep) {\n          completeStepNode.style.transition = `fill ${stepSpeed}ms ease`\n          completeStepNode.style.transitionDelay = `${stepSpeed * (i+1)}ms`\n          completeStepNode.style.fill = this.completeFill\n        } else {\n          completeStepNode.style.fill = this.backgroundColor\n        }\n      }\n\n      if (this.completeTextFill) {\n        const completeStepTextNode = this.target.querySelectorAll('.step-text')[i]\n        if (i < this.currentStep) {\n          completeStepTextNode.style.transition = `fill ${stepSpeed}ms ease`\n          completeStepTextNode.style.transitionDelay = `${stepSpeed * (i+1)}ms`\n          completeStepTextNode.style.fill = this.completeTextFill\n        } else {\n          completeStepTextNode.style.fill = this.textFill\n        }\n      }\n\n      if (this.activeTextFill) {\n        const completeStepTextNode = this.target.querySelectorAll('.step-text')[i]\n        if (i === this.currentStep) {\n          completeStepTextNode.style.transition = `fill ${stepSpeed}ms ease`\n          completeStepTextNode.style.transitionDelay = `${stepSpeed * (i+1)}ms`\n          completeStepTextNode.style.fill = this.activeTextFill\n        } else {\n          completeStepTextNode.style.fill = this.textFill\n        }\n      }\n    })\n\n    if (callback && callback.constructor === 'function') {\n      callback(this.target.querySelectorAll('.step-text')[this.currentStep])\n    }\n  },\n  setNumber (val, def) {\n      return isNaN(val) ? def : val\n  },\n  setString (val, def) {\n    return val || def\n  },\n  setConfig (conf) {\n    this.target = conf.target\n    this.circleRadius = this.setNumber(conf.circleRadius, 60)\n    this.currentStep = this.setNumber(conf.currentStep, 0)\n    this.currentStepCompleted = this.setNumber(conf.currentStepCompleted, 0)\n    this.animationSpeed = this.setNumber(conf.animationSpeed, 500)\n    this.textSizeRatio = this.setNumber(conf.textSizeRatio, 1)\n    this.steps = conf.steps || []\n    this.backgroundColor = this.setString(conf.backgroundColor, '#ffffff')\n    this.colorBg = this.setString(conf.colorBg, '#cccccc')\n    this.colorFg = this.setString(conf.colorFg, 'limeGreen')\n    this.strokeWidth = this.setNumber(conf.strokeWidth, 12)\n    this.textYPosition = this.setNumber(conf.textYPosition, 50)\n    this.textXoffset = this.setNumber(conf.textXoffset, 0)\n    this.svgHeightRatio = this.setNumber(conf.svgHeightRatio, 1)\n    this.textFill = this.setString(conf.textFill, 'black')\n    this.fontSize = this.setNumber(conf.fontSize, 40)\n    this.completeFill = this.setString(conf.completeFill, '')\n    this.completeTextFill = this.setString(conf.completeTextFill, '')\n    this.activeTextFill = this.setString(conf.activeTextFill, '')\n  },\n  updateProgress (conf, fn) {\n    this.currentStep = this.setNumber(conf.currentStep, this.currentStep)\n    this.currentStepCompleted = this.setNumber(conf.currentStepCompleted, this.currentStepCompleted)\n    this.animationSpeed = this.setNumber(conf.animationSpeed, this.animationSpeed)\n    this.animate(fn)\n  },\n  updateStepsText (steps) {\n    // grab all text nodes and remove\n    if (steps.length !== this.steps.length) {\n      console.error(`${libName}: could not update steps text as unequal step length`)\n      return this\n    }\n    this.steps = steps || this.steps\n    const allTextNodes = this.svgNode.querySelectorAll('.step-text')\n    for (let i = 0; i < allTextNodes.length; i++) {\n      allTextNodes[i].remove()\n    }\n    this.renderTextNodes()\n    return this\n  },\n  init (conf) {\n    if (! conf.target) return\n    if (! conf.steps || ! conf.steps.length) return\n\n    getCircleLengthPoly()  // check if polyfill required and set if so\n\n    this.setConfig(conf)\n    this.renderSvg()\n    this.renderBar()\n    this.renderSvgCircles()\n    this.renderTextNodes()\n    this.animate()\n  }\n}\n\nexport default conf => {\n  const progress = Object.create(stepsInit)\n  progress.init(conf)\n  return progress\n}"],"sourceRoot":""}